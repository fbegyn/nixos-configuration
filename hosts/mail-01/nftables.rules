#! /usr/bin/env nft -f

flush ruleset

# create blocklist for known issues
define IP_SPAM_BLOCKLIST = {
       185.165.190.17
}

table inet filter {
	chain output {
                # allow all outbound traffic
		type filter hook output priority 0; policy accept;
	}

	chain forward {
                # default drop traffic
		type filter hook forward priority 0; policy drop;
                # tailscale traffic gets handled by seperate chain
		# iifname "tailscale0" jump ts-forward
	}

	chain input {
		type filter hook input priority filter; policy drop;

                # tailscale traffic gets handled by seperate chain
		# iifname "tailscale0" jump vpn-input

                # Allow traffic from established and related packets.
                ct state established,related counter accept
                # Drop invalid packets.
                ct state invalid drop

                # Allow loopback traffic.
                iifname lo accept

                # to help prevent some types of flood attacks.
                ip protocol icmp limit rate 4/second counter accept
                ip6 nexthdr ipv6-icmp limit rate 4/second counter accept
                ip protocol igmp limit rate 4/second accept

                tcp dport 22 counter accept

                # block known malicious IPs
                # iifname "ens3" ip saddr $IP_SPAM_BLOCKLIST drop comment "Known spam actors"
                # Allow all ICMP and IGMP traffic, but enforce a rate limit
                # iifname "ens3" jump mailserver-wan
	}

        chain mailserver-wan {
		type filter hook input priority filter; policy drop;
                tcp dport 80 accept comment "Let's encrypt cert port"
                tcp dport 25 accept
                tcp dport 143 accept
                tcp dport 465 accept
                tcp dport 587 accept
                tcp dport 993 accept
        }

        chain vpn-input {
		type filter hook input priority filter; policy drop;
                tcp dport 22 accept
        }
}
